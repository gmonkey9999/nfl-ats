name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run tests (matrix)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        run: pytest -q

  smoke:
    name: Quick smoke test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-smoke-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-smoke-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run smoke test only
        run: pytest -q tests/test_weekly_smoke.py
name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip setuptools wheel
            python -m pip install -r requirements.txt
          else
            python -m pip install --upgrade pip
            python -m pip install pandas pytest
          fi

      - name: Run pipeline to produce datasets
        run: |
          python run_pipeline.py --seasons 2018-2024 --out_dir ./data

      - name: Create splits and archive
        run: |
          python split_dataset.py --csv ./data/nfl_ats_model_dataset_with_players.csv --out_dir ./data/splits --mode temporal --export-train-by-season --archive-train-by-season

      - name: Upload split archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: train_by_season_archive
          path: |
            ./data/splits/train_by_season.tar.gz

      - name: Upload split metadata
        uses: actions/upload-artifact@v4
        with:
          name: split_meta
          path: |
            ./data/splits/split_meta.json

      - name: Validate produced datasets
        run: |
          python validate_dataset.py --csv ./data/nfl_ats_model_dataset.csv
          python validate_dataset.py --csv ./data/nfl_ats_model_dataset_with_players.csv
          # validate split metadata and files
          python validate_dataset.py --csv ./data/splits/train.csv --check-split

      - name: Run tests
        run: |
          pytest -q tests/test_pipeline_smoke.py

      - name: Fast training (CI smoke)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Running fast-mode training (smoke) to catch training regressions"
          python train_xgb_cover.py \
            --in_csv data/nfl_ats_model_dataset_with_players.csv \
            --out_dir models/ci_fast \
            --auto_split \
            --fast \
            --fast-estimators 10 \
            --max-rows 200 \
            --seed 42

      - name: Upload fast-training artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: ci_fast_model
          path: |
            models/ci_fast/xgb_model.json
            models/ci_fast/metrics.txt
            models/ci_fast/predictions.csv
